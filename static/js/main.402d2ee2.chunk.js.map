{"version":3,"sources":["types/SortBy.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["SortBy","TodoList","listOfTodos","onSelect","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","onInput","query","onClickClearButton","onChange","e","target","value","all","active","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoModal","onCross","loading","useState","userData","setUserData","useEffect","fetchUser","a","user","href","email","name","App","todos","setTodos","selectedTodo","setSelectedTodo","sortBy","setSortBy","setQuery","isLoading","setIsloading","data","visibleListOfTodos","filter","el","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.402d2ee2.chunk.js","sourcesContent":["export enum SortBy {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n// import { SortBy } from '../../types/SortBy';\n\ntype ListOfTodos = {\n  listOfTodos: Todo[],\n  onSelect: (todo: Todo) => void;\n  // sortBy: SortBy,\n  // query: string,\n};\n\nexport const TodoList: React.FC<ListOfTodos> = ({\n  listOfTodos,\n  onSelect,\n  // sortBy,\n  // query,\n}) => {\n  // let visibleListOfTodos = listOfTodos.filter(el => el.title.includes(query));\n\n  // switch (sortBy) {\n  //   case SortBy.active:\n  //     visibleListOfTodos = visibleListOfTodos.filter(\n  //       el => el.completed === false,\n  //     );\n  //     break;\n\n  //   case SortBy.completed:\n  //     visibleListOfTodos = visibleListOfTodos.filter(\n  //       el => el.completed === true,\n  //     );\n  //     break;\n\n  //   default:\n  //     break;\n  // }\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {listOfTodos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed\n                && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames(\n                  {\n                    'has-text-danger': !todo.completed,\n                    'has-text-success': todo.completed,\n                  },\n                )}\n              >\n                {todo.title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelect(todo)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { ChangeEvent } from 'react';\nimport { SortBy } from '../../types/SortBy';\n\ntype FilterTodo = {\n  onSelect: (value: SortBy) => void,\n  onInput: (value: string) => void,\n  query: string,\n  onClickClearButton: () => void,\n};\n\nexport const TodoFilter: React.FC<FilterTodo> = ({\n  onSelect,\n  onInput,\n  query,\n  onClickClearButton,\n}) => {\n  const handleChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\n    onInput(e.target.value);\n  };\n\n  const hadleSelectInput = (e: ChangeEvent<HTMLSelectElement>) => {\n    onSelect(e.target.value as SortBy);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            onChange={hadleSelectInput}\n            data-cy=\"statusSelect\"\n          >\n            <option value={SortBy.all}>All</option>\n            <option value={SortBy.active}>Active</option>\n            <option value={SortBy.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onClickClearButton()}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(900)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","// import { Dispatch, SetStateAction } from 'react';\nimport { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\nexport type TodoM = {\n  onCross: () => void,\n  todo: Todo,\n  getUser: (userId: number) => void,\n  loading: boolean,\n};\n\nexport const TodoModal: React.FC<TodoM> = ({\n  onCross,\n  todo,\n  loading,\n}) => {\n  const [userData, setUserData] = useState<User | null>(null);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const user = await getUser(todo.userId);\n\n      setUserData(user);\n    };\n\n    fetchUser();\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onCross()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n\n              <a href={`mailto:${userData?.email}`}>\n                {userData?.name || <Loader />}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos, getUser } from './api';\nimport { SortBy } from './types/SortBy';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>();\n  const [sortBy, setSortBy] = useState(SortBy.all);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsloading] = useState(true);\n\n  useEffect(() => {\n    getTodos().then(data => {\n      setTodos(data);\n      setIsloading(false);\n    });\n  }, []);\n\n  const handleSelectBtn = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const handleClickCross = () => {\n    setSelectedTodo(null);\n  };\n\n  const handleSelectFilter = (value: SortBy) => {\n    setSortBy(value);\n  };\n\n  const handleInputFilter = (value: string) => {\n    setQuery(value);\n  };\n\n  const handleClearInputBtn = () => {\n    setQuery('');\n  };\n\n  let visibleListOfTodos = todos.filter(el => el.title.includes(query));\n\n  switch (sortBy) {\n    case SortBy.active:\n      visibleListOfTodos = visibleListOfTodos.filter(\n        el => el.completed === false,\n      );\n      break;\n\n    case SortBy.completed:\n      visibleListOfTodos = todos.filter(\n        el => el.completed === true,\n      );\n      break;\n\n    default:\n      break;\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onSelect={handleSelectFilter}\n                onInput={handleInputFilter}\n                query={query}\n                onClickClearButton={handleClearInputBtn}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  listOfTodos={visibleListOfTodos}\n                  onSelect={handleSelectBtn}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          onCross={handleClickCross}\n          todo={selectedTodo}\n          getUser={getUser}\n          loading={isLoading}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}